Components
Game
This component is the main Tic-tac-toe game component that renders the game board and handles user interactions. It contains the state of the game (i.e., the current player, the status of the game, and the state of the game board), as well as functions to handle user clicks on the board and to determine the winner of the game.

Square
This component is a small component that represents a single square on the game board. It receives the value of the square (X, O, or null) as a prop, and renders a button with the appropriate value.

Functions
calculateWinner(squares)
This function takes an array of square values and returns the winning player (X or O) if there is a winner, or null if there is no winner yet. The function checks all possible winning combinations on the board to see if any player has won.

renderSquare(i)
This function renders a Square component with the appropriate value for the specified index i. It also adds an onClick event listener to the square that calls the handleClick function when the square is clicked.

handleClick(i)
This function is called when a user clicks on a square. It updates the state of the game board by creating a new copy of the squares array with the new value at the clicked square index. It also updates the current player and the status of the game, and checks if there is a winner.

Usage Instructions
To use the Tic-tac-toe game, follow these steps:

Clone the repository to your local machine.

Navigate to the project directory in your terminal.

Install the necessary dependencies by running the following command:

Copy code
npm install
Start the development server by running the following command:

sql
Copy code
npm start
Open your web browser and navigate to http://localhost:3000. You should see the Tic-tac-toe game.

Click on any square on the board to place your marker and start playing the game.

The game will automatically alternate turns between "X" and "O". The game will display a message indicating the winner or if the game ends in a draw.

To reset the game, you can simply refresh the page or add a "Reset" button to your UI that will reset the state of the game.

Note that you can also modify the code to customize the game, such as changing the size of the board or the player markers.